{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/mario plan/marioplan/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createFirestoreInstance, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nvar store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase: getFirebase,\n  getFirestore: getFirestore\n})), reactReduxFirebaseProvider(fbConfig), // redux binding for firebase\nreduxFirestore(fbConfig) // redux bindings for firestore\n));\nvar rrfProps = {\n  firebase: firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance: createFirestoreInstance // <- needed if using firestore\n\n};\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})), document.getElementById(\"root\"));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/user/Desktop/mario plan/marioplan/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","createFirestoreInstance","getFirestore","reactReduxFirebaseProvider","getFirebase","fbConfig","store","withExtraArgument","reduxFirestore","rrfProps","firebase","config","rrfConfig","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,uBAAT,EAAkCC,YAAlC,QAAsD,iBAAtD;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,KAAK,GAAGX,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACLD,eAAe,CAACI,KAAK,CAACO,iBAAN,CAAwB;AAAEH,EAAAA,WAAW,EAAXA,WAAF;AAAeF,EAAAA,YAAY,EAAZA;AAAf,CAAxB,CAAD,CADV,EAELC,0BAA0B,CAACE,QAAD,CAFrB,EAEiC;AACtCG,cAAc,CAACH,QAAD,CAHT,CAGoB;AAHpB,CAFgB,CAAzB;AAQA,IAAMI,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAARA,QADe;AAEfC,EAAAA,MAAM,EAAEC,SAFO;AAGfC,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHD;AAIfZ,EAAAA,uBAAuB,EAAvBA,uBAJe,CAIS;;AAJT,CAAjB;AAOAT,QAAQ,CAACsB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAMAtB,qBAAqB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createFirestoreInstance, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebaseProvider(fbConfig), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}